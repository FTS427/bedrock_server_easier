name: Release LeviLaminaBDS
on:
  workflow_dispatch:
    inputs:
      LL_VER:
        description: 'LeviLamina version'
        required: true
        default: ${{ github.event.inputs.LL_VER }}
  workflow_run:
    workflows: ["Get Latest LeviLamina Version"]
    types:
      - completed

jobs:
  get_latest_version:
    runs-on: ubuntu-latest
    steps:
      - name: Check Out
        uses: actions/checkout@v2
      - name: Get Latest LeviLamina Version
        id: get_version
        run: |
          # Call GitHub API to get the latest release version
          LATEST_VERSION=$(curl -s "https://api.github.com/repos/LiteLDev/LeviLamina/releases/latest" | jq -r '.tag_name')
          echo "::set-output name=version::$LATEST_VERSION"
      - name: Set Latest Version
        run: echo "LL_VER=${{ steps.get_version.outputs.version }}" >> $GITHUB_ENV
      - name: Use Latest Version
        run: echo "Latest LeviLamina version is $LL_VER"
  build:
    if: github.event.repository.owner.id == github.event.sender.id
    permissions:
      contents: write
    runs-on: windows-latest
    needs: get-latest-version
    steps:
      - name: Check Out
        uses: actions/checkout@v3
      - name: Install Lip
        run: |
          rm README.md
          rm LICENSE
          Invoke-WebRequest -Uri https://github.com/lippkg/lip/releases/download/v0.21.2/lip-windows-amd64.zip -Outfile ./lip.zip
          unzip lip.zip
      - name: Install LeviLamina
        run: |
          mkdir llbds
          cd llbds
          ../lip.exe install -y https://github.com/LiteLDev/LeviLamina@${{ needs.get-latest-version.outputs.latest_version }}
          ls
      - name: Install LSE
        if: github.event.inputs.LSE == 'true'
        run: |
          cd llbds
          ../lip.exe install -y github.com/LiteLDev/LegacyScriptEngine
          cd ../
      - name: Install runtime
        if: github.event.inputs.RUNTIME == 'true'
        run: |
          cd llbds
          Invoke-WebRequest -Uri https://aka.ms/vs/17/release/vc_redist.x64.exe -Outfile ./runtime_for_levilamina.exe
          cd ../
      - name: Run user scripts
        if: github.event.inputs.SCRIPTS == 'true'
        run: |
          cd llbds
          ../user_scripts.bat
          cd ../
      - name: Pack files
        run: |
          Invoke-WebRequest -Uri https://www.7-zip.org/a/7z2401-x64.exe -Outfile ./7z.exe
          .\7z.exe
          7z a -tzip llbds_${{ needs.get-latest-version.outputs.latest_version }}.zip llbds\
      - name: Upload to Release
        uses: softprops/action-gh-release@v1
        with:
          files: llbds_${{ needs.get-latest-version.outputs.latest_version }}.zip
          name: LeviLaminaBDS - ${{ needs.get-latest-version.outputs.latest_version }}
          tag_name: ${{ needs.get-latest-version.outputs.latest_version }}
          body: |
            LeviLamina version: ${{ needs.get-latest-version.outputs.latest_version }}
            Include LSE: ${{ github.event.inputs.LSE }}
            Include Runtime: ${{ github.event.inputs.RUNTIME }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
